name: Deploy Flask + React App to EC2

on:
  push:
    branches:
      - master  # or 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name:  Checkout code
      uses: actions/checkout@v3

    - name:  Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name:  Install dependencies (validate build)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name:  Save SSH private key
      run: |
        echo "${{ secrets.SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name:  Ensure project folder exists on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          echo " Checking /home/ubuntu..."
          if [ ! -d "/home/ubuntu" ]; then
            sudo mkdir -p /home/ubuntu
          fi
          echo " Creating project folder..."
          sudo mkdir -p /home/ubuntu/crime-dashboard
          sudo chown -R ubuntu:ubuntu /home/ubuntu/crime-dashboard
          echo " Folder ready!"
        EOF

    - name:  Backup existing deployment (Rollback point)
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          if [ -d "/home/ubuntu/crime-dashboard" ]; then
            cp -r /home/ubuntu/crime-dashboard /home/ubuntu/crime-dashboard-backup-$TIMESTAMP
            echo " Backup created at: crime-dashboard-backup-$TIMESTAMP"
          else
            echo "⚠ No existing deployment to back up."
          fi
        EOF


    - name:  Copy project files to EC2
      run: |
        rsync -avz \
          -e "ssh -o StrictHostKeyChecking=no -i key.pem" \
          --exclude '.git' \
          --exclude '.github' \
          --exclude 'key.pem' \
          ./ \
          ubuntu@3.106.114.66:/home/ubuntu/crime-dashboard/

    - name:  Restart Flask backend
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/ubuntu/crime-dashboard
          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pkill -f "flask run" || true
          nohup flask run --host=0.0.0.0 --port=5000 > app.log 2>&1 &
          echo "✅ Flask backend restarted on port 5000!"
        EOF

    - name:  Serve React frontend
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/ubuntu/crime-dashboard
          pkill -f "npx serve" || true
          nohup npx serve -s . -l 3000 > frontend.log 2>&1 &
          echo "✅ Frontend served on port 3000!"
        EOF
