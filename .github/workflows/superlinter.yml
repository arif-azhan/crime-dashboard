name: Deploy Flask App

on:
  push:
    branches:
      - master  # Change to 'main' if your default branch is 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies locally (build validation)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Save SSH key to file
      run: |
        echo "${{ secrets.SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Create project directory on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          mkdir -p /home/ubuntu/crime-dashboard
        EOF

    - name: Copy project files to EC2 using rsync
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=no -i key.pem" \
          --exclude '.git' \
          --exclude '.github' \
          --exclude 'key.pem' \
          ./ ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/crime-dashboard

    - name: Restart Flask App on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/ubuntu/crime-dashboard
          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          source .venv/bin/activate
          pip install -r requirements.txt
          pkill -f "flask run" || true
          nohup flask run --host=0.0.0.0 --port=5000 > app.log 2>&1 &
        EOF
